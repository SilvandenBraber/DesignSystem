import CoreTokens from "./CoreTokens";

const {
  color,
  radius,
  fontFile,
  textDecoration,
  textTransform,
  thickness,
  fontSize,
  letterSpacing,
  lineHeight,
  length,
  spacing,
  breakpoint,
} = CoreTokens;

const SemanticTokens = {
  border: {
    radius: {
      subtle: radius[100],
      regular: radius[200],
    },
    color: {
      minimal: color.ibra[200],
      subtle: color.ibra[300],
      regular: color.ibra[400],
      dark: color.ibra[900],
      accent: color.city[600],
      danger: color.united[600],
    },
    width: {
      default: thickness[100],
      emphasis: thickness[200],
    },
  },
  feedback: {
    dangerBright: color.united[600],
    successBright: color.sporting[600],
    infoBright: color.city[600],
    warningBright: color.clockwork[500],
  },
  icon: {
    default: color.ibra[900],
    inverted: color.ibra[0],
    actionableDefault: color.city[600],
    actionableInteractive: color.city[700],
    error: color.united[600],
  },
  illustration: {
    outline: color.ibra[900],
    shade: color.ibra[200],
    white: color.ibra[0],
    blue: color.city[200],
    orange: color.clockwork[200],
    gray: color.ibra[200],
    purple: color.laviola[200],
    green: color.sporting[200],
    red: color.united[200],
    yellow: color.canaries[200],
    darkGray: color.ibra[700],
  },
  layout: {
    gap: {
      mobileSm: spacing[100],
      mobile: spacing[200],
      tablet: spacing[400],
      desktop: spacing[400],
    },
    sideMargin: {
      mobile: spacing[200],
      tablet: spacing[400],
      desktop: spacing[400],
    },
    maxWidth: {
      mobile: length.none,
      tablet: length.none,
      desktop: length[550],
    },
    breakpoint: {
      mobile: breakpoint.sm,
      tablet: breakpoint.md,
      desktop: breakpoint.lg,
    },
  },
  overlay: {
    mediaHover: color.seeThrough[100],
    mediaActive: color.seeThrough[200],
    backdrop: color.seeThrough[800],
  },
  padding: {
    xxxs: spacing[50],
    xxs: spacing[100],
    xs: spacing[150],
    sm: spacing[200],
    md: spacing[300],
    lg: spacing[400],
  },
  margin: {
    xxxs: spacing[50],
    xxs: spacing[100],
    xs: spacing[150],
    sm: spacing[200],
    md: spacing[300],
    lg: spacing[400],
  },
  surface: {
    primary: color.ibra[0],
    primaryInteractive: color.city[100],
    subtle: color.ibra[100],
    subtleInteractive: color.ibra[200],
    secondary: color.ibra[900],
    secondaryInteractive: color.ibra[800],
    secondarySoft: color.ibra[700],
    accentBright: color.city[600],
    accentInteractive: color.city[700],
  },
  text: {
    lineHeight: {
      display: lineHeight.md,
      heading: lineHeight.md,
      body: lineHeight.lg,
      singleLine: lineHeight.md,
    },
    font: {
      display: fontFile.primary.black,
      headingSemiBold: fontFile.primary.semiBold,
      headingBold: fontFile.primary.extraBold,
      headingBlack: fontFile.primary.black,
      bodyRegular: fontFile.secondary.regular,
      bodyBold: fontFile.secondary.bold,
    },
    size: {
      displayLg: fontSize[800],
      displayMd: fontSize[700],
      headingXl: fontSize[600],
      headingLg: fontSize[500],
      headingMd: fontSize[400],
      headingSm: fontSize[300],
      headingXs: fontSize[200],
      input: fontSize[200],
      regular: fontSize[100],
      detail: fontSize[50],
    },
    transform: {
      display: textTransform.normal,
      heading: textTransform.normal,
      headingAlternative: textTransform.upperCase,
    },
    decoration: {
      link: textDecoration.underline,
    },
    color: {
      heading: color.ibra[900],
      headingInverted: color.ibra[0],
      default: color.ibra[900],
      defaultInverted: color.ibra[0],
      link: color.city[600],
      linkInteractive: color.city[700],
      button: color.ibra[900],
      buttonInverted: color.ibra[0],
      buttonAccent: color.city[600],
      support: color.ibra[600],
      error: color.united[600],
    },
    letterSpacing: {
      spacious: letterSpacing[600],
      loose: letterSpacing[400],
      normal: letterSpacing[300],
      refined: letterSpacing[200],
      subtle: letterSpacing[100],
      none: letterSpacing[0],
    },
  },
};

export default SemanticTokens;
